on:
  push:
    branches: [ "main" ]

jobs:
  deployment_job:
    runs-on: ubuntu-latest
    name: ssh push
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: mkdir -p "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package"
      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/src" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/Dockerfile" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/.dockerignore" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/compose.yaml" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/tsconfig.json" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
#      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"
#      - run: cp "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/" "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package/"


      - name: SSH package.json
        uses: ErenKrt/ssh-push@main
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/package"
          destination: "/home/pi/workspace/eko-waste-table/web.zip"
          scripts: echo "packages files copied" | unzip /home/pi/workspace/eko-waste-table/web.zip

#      - name: SSH Dockerfile
#        uses: ErenKrt/ssh-push@main
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/Dockefile"
#          destination: "/home/pi/workspace/eko-waste-table/Dockefile"
#          scripts: echo "Dockerfile file copied"
#
#      - name: SSH .dockerignore
#        uses: ErenKrt/ssh-push@main
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/.dockerignore"
#          destination: "/home/pi/workspace/eko-waste-table/.dockerignore"
#          scripts: echo ".dockerignore file copied"
#
#      - name: SSH compose.yaml
#        uses: ErenKrt/ssh-push@main
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/compose.yaml"
#          destination: "/home/pi/workspace/eko-waste-table/compose.yaml"
#          scripts: echo "compose.yaml file copied"
#
#      - name: SSH tsconfig.json
#        uses: ErenKrt/ssh-push@main
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/tsconfig.json"
#          destination: "/home/pi/workspace/eko-waste-table/tsconfig.json"
#          scripts: echo "tsconfig.json file copied"
#
#      - name: SSH src
#        uses: ErenKrt/ssh-push@main
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{secrets.PASSWORD }}
#          port: ${{ secrets.PORT }}
#          source: "/home/runner/work/ekosystem-waste-table-json/ekosystem-waste-table-json/src/"
#          destination: "/home/pi/workspace/eko-waste-table/src/"
#          scripts: echo "ok"

#name: SSH PUSH
#
#on:
#  push:
#    branches: [ "main" ]
##  pull_request:
##    branches: [ "main" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    # strategy:
#    #   matrix:
#    #     node-version: [14.x, 16.x, 18.x]
#    #     # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
#
#    steps:
#      - name: SSH Push
#        uses: ErenKrt/ssh-push@1.3
#        with:
#          # IP Address of remote host
#          host: ${{ secrets.HOST }}
#          # Port of SSH Protocol
#          port: ${{ secrets.PORT }}
#          # Username of SSH user
#          username: ${{ secrets.USER }}
#          # Password of user
#          password: ${{ secrets.PASSWORD }}
#          # Folder/File to be transferred
#          source: "./src"
#          # Destination of source archive file
#          destination: "~/workspace/eko-waste-table/src"
#          # Execute commands after transfer source file
#          scripts: echo "ok"
#
#
#    # - uses: actions/checkout@v3
#    # - name: Use Node.js ${{ matrix.node-version }}
#    #   uses: actions/setup-node@v3
#    #   with:
#    #     node-version: ${{ matrix.node-version }}
#    #     cache: 'npm'
#    # - run: npm ci
#    # - run: npm run build --if-present
#    # - run: npm test
#
#
## - name: SSH Push
#  # You may pin to the exact commit or the version.
#  # uses: ErenKrt/ssh-push@cea145c9f5cc7a0a12e8151ac946e6d2fe565fd7
#  # uses: ErenKrt/ssh-push@1.3
#  # with:
#  #   # IP Address of remote host
#  #   host: home.dobrastronka.pl
#  #   # Port of SSH Protocol
#  #   port: 22222
#  #   # Username of SSH user
#  #   username: pi
#  #   # Password of user
#  #   password:
#  #   # Folder/File to be transferred
#  #   source: src
#  #   # Destination of source archive file
#  #   destination: ~/workspace/eko-waste-table/src
#  #   # Execute commands after transfer source file
#  #   scripts: echo "ok"
#
#
#
#          # ssh pi@home.dobrastronka.pl -p 22222
#
## ~/workspace/eko-waste-table
## zmiana na branchu -> wy≈õlij pliki Dockerfile, compose.yaml, package.json, package-lock.json, src/
##
#
#
## This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
#
